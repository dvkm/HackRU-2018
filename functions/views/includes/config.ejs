<script src="https://www.gstatic.com/firebasejs/5.5.3/firebase.js"></script>
<script>
    var config = {
        apiKey: "AIzaSyARwGhrrIfDZqMOnnKpb0vRTT6zBWbNRiU",
        authDomain: "coral-velocity-218522.firebaseapp.com",
        databaseURL: "https://coral-velocity-218522.firebaseio.com",
        projectId: "coral-velocity-218522",
        storageBucket: "coral-velocity-218522.appspot.com",
        messagingSenderId: "921564285159"
    };

    // Initialize your Firebase app
    firebase.initializeApp(config);
</script>
<meta charset="UTF-8">
<title>Event Creation Form</title>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/semantic-ui@2.4.0/dist/semantic.min.css">
<script
        src="https://code.jquery.com/jquery-3.1.1.min.js"
        integrity="sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8="
        crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/semantic-ui@2.4.0/dist/semantic.min.js"></script>

<script src="https://cdn.firebase.com/libs/firebaseui/3.4.1/firebaseui.js"></script>
<link type="text/css" rel="stylesheet" href="https://cdn.firebase.com/libs/firebaseui/3.4.1/firebaseui.css" />
<script>
    // Track the UID of the current user.
    var currentUid = null;
    firebase.auth().onAuthStateChanged(function(user) {
        // onAuthStateChanged listener triggers every time the user ID token changes.
        // This could happen when a new user signs in or signs out.
        // It could also happen when the current user ID token expires and is refreshed.
        console.log(user);
        var user = user;
        if (user && user.uid != currentUid) {
            // Update the UI when a new user signs in.
            // Otherwise ignore if this is a token refresh.
            // Update the current user UID.
            currentUid = user.uid;
            $("#login").hide();
            $("#logout").show();
            // document.body.innerHTML = '<h1> Congrats ' + user.displayName + ', you are done! </h1> <h2> Now get back to what you love building. </h2> <a onclick="firebase.auth().signOut();">logout</a> <h2> Need to verify your email address or reset your password? Firebase can handle all of that for you using the email you provided: ' + user.email + '. <h/2>';
        } else {
            // Sign out operation. Reset the current user UID.
            currentUid = null;
            $("#logout").hide();
            $("#login").show();
            console.log("no user signed in");
        }
    });
    // FirebaseUI config.
    var uiConfig = {
        signInSuccessUrl: '/event/view/all',
        signInOptions: [
            // Leave the lines as is for the providers you want to offer your users.
            firebase.auth.GoogleAuthProvider.PROVIDER_ID,
            // firebase.auth.FacebookAuthProvider.PROVIDER_ID,
            // firebase.auth.TwitterAuthProvider.PROVIDER_ID,
            // firebase.auth.GithubAuthProvider.PROVIDER_ID,
            firebase.auth.EmailAuthProvider.PROVIDER_ID,
            firebase.auth.PhoneAuthProvider.PROVIDER_ID,
            firebaseui.auth.AnonymousAuthProvider.PROVIDER_ID
        ],
        // tosUrl and privacyPolicyUrl accept either url string or a callback
        // function.
        // Terms of service url/callback.
        // tosUrl: '<your-tos-url>',
        // Privacy policy url/callback.
        // privacyPolicyUrl: function() {
        //     window.location.assign('<your-privacy-policy-url>');
        // }
    };

    // Initialize the FirebaseUI Widget using Firebase.
    var ui = new firebaseui.auth.AuthUI(firebase.auth());
    // The start method will wait until the DOM is loaded.
    ui.start('#firebaseui-auth-container', uiConfig);
</script>

<style>
    body {
        background-color: #fcfbf8;
        margin-left:50px;
        margin-right:50px;
    }
    /* The Modal (background) */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        padding-top: 100px; /* Location of the box */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }

    /* Modal Content */
    .modal-content {
        background-color: #fefefe;
        margin: auto;
        padding: 20px;
        border: 1px solid #888;
        width: 30%;
    }

    /* The Close Button */
    .close {
        color: #aaaaaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

    .close:hover,
    .close:focus {
        color: #000;
        text-decoration: none;
        cursor: pointer;
    }
</style>
<script src="https://cdn.jsdelivr.net/algoliasearch/3/algoliasearch.min.js"></script>
